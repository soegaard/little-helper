►  The Racket Reference
 1  Language Model
 2  Syntactic Forms
 3  Datatypes
 4  Structures
 5  Classes and Objects
 6  Units
 7  Contracts
 8  Pattern Matching
 9  Control Flow
10  Concurrency and Parallelism
11  Macros
12  Input and Output
13  Reflection and Security
14  Operating System
15  Memory Management
16  Unsafe Operations
17  Running Racket
    Bibliography
    Index
▼ 11  Macros
 11.1  Pattern-Based Syntax Matching
 11.2  Syntax Object Content
 11.3  Syntax Object Bindings
 11.4  Syntax Transformers
 11.5  Syntax Parameters
 11.6  Local Binding with Splicing Body
 11.7  Syntax Object Properties
 11.8  Syntax Taints
 11.9  Expanding Top-Level Forms
11.10  File Inclusion
11.11  Syntax Utilities
[...search manuals...]
  top← prev  up  next → 

11 Macros

See Syntax Model for general information on how programs are parsed. In
particular, the subsection Expansion Steps describes how parsing triggers
macros, and Transformer Bindings describes how macro transformers are called.

    11.1 Pattern-Based Syntax Matching

    11.2 Syntax Object Content

    11.3 Syntax Object Bindings

    11.4 Syntax Transformers

      11.4.1 require Transformers

      11.4.2 provide Transformers

    11.5 Syntax Parameters

      11.5.1 Syntax Parameter Inspection

    11.6 Local Binding with Splicing Body

    11.7 Syntax Object Properties

    11.8 Syntax Taints

    11.9 Expanding Top-Level Forms

      11.9.1 Information on Expanded Modules

    11.10 File Inclusion

    11.11 Syntax Utilities

      11.11.1 Creating formatted identifiers

      11.11.2 Pattern variables

      11.11.3 Error reporting

      11.11.4 Recording disappeared uses

      11.11.5 Miscellaneous utilities

[...search manuals...]
  top← prev  up  next → 
 
