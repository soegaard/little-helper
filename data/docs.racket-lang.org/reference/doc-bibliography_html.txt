▼  The Racket Reference
 1  Language Model
 2  Syntactic Forms
 3  Datatypes
 4  Structures
 5  Classes and Objects
 6  Units
 7  Contracts
 8  Pattern Matching
 9  Control Flow
10  Concurrency and Parallelism
11  Macros
12  Input and Output
13  Reflection and Security
14  Operating System
15  Memory Management
16  Unsafe Operations
17  Running Racket
    Bibliography
    Index
[...search manuals...]
  top← prev  up  next → 

Bibliography

[Danvy90]        Olivier Danvy and Andre Filinski, “Abstracting Control,” LISP
                 and Functional Programming, 1990.
[Felleisen88a]   Matthias Felleisen, “The theory and practice of first-class
                 prompts,” Principles of Programming Languages, 1988.
                 Matthias Felleisen, Mitch Wand, Dan Friedman, and Bruce Duba,
[Felleisen88]    “Abstract Continuations: A Mathematical Semantics for Handling
                 Full Functional Jumps,” LISP and Functional Programming, 1988.
                 Daniel P. Friedman, C. T. Haynes, and R. Kent Dybvig,
[Friedman95]     “Exception system proposal,” web page, 1995. http://
                 www.cs.indiana.edu/scheme-repository/
                 doc.proposals.exceptions.html
                 Martin Gasbichler and Michael Sperber, “Processes vs.
[Gasbichler02]   User-Level Threads in Scsh,” Workshop on Scheme and Functional
                 Programming, 2002.
                 Carl Gunter, Didier Remy, and Jon Rieke, “A Generalization of
[Gunter95]       Exceptions and Control in ML-like Languages,” Functional
                 Programming Languages and Computer Architecture, 1995.
                 Barry Hayes, “Ephemerons: a New Finalization Mechanism,”
[Hayes97]        Object-Oriented Languages, Programming, Systems, and
                 Applications, 1997.
                 Robert Hieb and R. Kent Dybvig, “Continuations and
[Hieb90]         Concurrency,” Principles and Practice of Parallel Programming,
                 1990.
                 Pierre L’Ecuyer, Richard Simard, E. Jack Chen, and W. David
[L'Ecuyer02]     Kelton, “An Object-Oriented Random-Number Package With Many
                 Long Streams and Substreams,” Operations Research, 50(6),
                 2002.
                 Queinnec and Serpette, “A Dynamic Extent Control Operator for
[Queinnec91]     Partial Continuations,” Principles of Programming Languages,
                 1991.
[Shan04]         Ken Shan, “Shift to Control,” Workshop on Scheme and
                 Functional Programming, 2004.
                 Michael Sperber, R. Kent Dybvig, Matthew Flatt, and Anton van
[Sperber07]      Straaten (editors), “The Revised6 Report on the Algorithmic
                 Language Scheme.” 2007. http://www.r6rs.org/
[Sitaram90]      Dorai Sitaram and Matthias Felleisen, “Control Delimiters and
                 Their Hierarchies,” Lisp and Symbolic Computation, 1990.
[Sitaram93]      Dorai Sitaram, “Handling Control,” Programming Language Design
                 and Implementation, 1993.
[SRFI-42]        Sebastian Egner, “SRFI-42: Eager Comprehensions,” SRFI, 2003.
                 http://srfi.schemers.org/srfi-42/
                 Oscar Waddell and R. Kent Dybvig, “Extending the Scope of
[Waddell99]      Syntactic Abstraction,” Principles of Programming Languages,
                 1999.

[...search manuals...]
  top← prev  up  next → 
 
