▼  Unstable: May Change Without Warning
 1  Guidelines for developing unstable libraries
 2  Automata: Compiling State Machines
 3  Bytes
 4  Contracts
 5  Contracts for macro subexpressions
 6  Contracts for struct type properties
 7  Debugging
 8  Definitions
 9  Dictionaries
10  Exceptions
11  Filesystem
12  Find
13  Finding Mutated Variables
14  Functions
15  Generics
16  Hash Tables
17  Interface-Oriented Programming for Classes
18  Lists
19  Logging
20  Mark Parameters
21  Match
22  Net
23  Path
24  Ports
25  Pretty-Printing
26  Requiring Modules
27  Sequences
28  Strings
29  Structs
30  Syntax
31  Temporal Contracts: Explicit Contract Monitors
32  GUI libraries
On this page:
==
match?
as
Version: 5.1.2
[...search manuals...]
  top← prev  up  next → 

21 Match

Sam Tobin-Hochstadt <samth@ccs.neu.edu>

 (require unstable/match)

This library is unstable; compatibility will not be maintained. See Unstable:
May Change Without Warning for more information.

(== val comparator)
(== val)
A match expander which checks if the matched value is the same as val when
compared by comparator. If comparator is not provided, it defaults to equal?.

Examples:

    > (match (list 1 2 3)
        [(== (list 1 2 3)) 'yes]
        [_ 'no])
    'yes

    > (match (list 1 2 3)
        [(== (list 1 2 3) eq?) 'yes]
        [_ 'no])
    'no

    > (match (list 1 2 3)
        [(list 1 2 (== 3 =)) 'yes]
        [_ 'no])
    'yes



            The subsequent bindings were added by Carl Eastlund <
            cce@racket-lang.org>.

(match? val-expr pat ...)
Returns #t if the result of val-expr matches any of pat, and returns #f
otherwise.

Examples:

    > (match? (list 1 2 3)
        (list a b c)
        (vector x y z))
    #t

    > (match? (vector 1 2 3)
        (list a b c)
        (vector x y z))
    #t

    > (match? (+ 1 2 3)
        (list a b c)
        (vector x y z))
    #f



(as ([lhs-id rhs-expr] ...) pat ...)
As a match expander, binds each lhs-id as a pattern variable with the result
value of rhs-expr, and continues matching each subsequent pat.

Example:

    > (match (list 1 2 3)
        [(as ([a 0]) (list b c d)) (list a b c d)])
    '(0 1 2 3)



[...search manuals...]
  top← prev  up  next → 
 
