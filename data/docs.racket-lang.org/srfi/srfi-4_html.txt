▼  SRFIs: Libraries
 SRFI 1: List Library
 SRFI 2: AND-LET*: an AND with local bindings...
 SRFI 4: Homogeneous numeric vector datatypes
 SRFI 5: A compatible let form with signatures and rest arguments
 SRFI 6: Basic String Ports
 SRFI 7: Feature-based program configuration language
 SRFI 8: RECEIVE: Binding to multiple values
 SRFI 9: Defining Record Types
 SRFI 11: Syntax for receiving multiple values
 SRFI 13: String Libraries
 SRFI 14: Character-set Library
 SRFI 16: Syntax for procedures of variable arity
 SRFI 17: Generalized set!
 SRFI 19: Time Data Types and Procedures
 SRFI 23: Error reporting mechanism
 SRFI 25: Multi-dimensional Array Primitives
 SRFI 26: Notation for Specializing Parameters without Currying
 SRFI 27: Sources of Random Bits
 SRFI 28: Basic Format Strings
 SRFI 29: Localization
 SRFI 30: Nested Multi-line Comments
 SRFI 31: A special form rec for recursive evaluation
 SRFI 34: Exception Handling for Programs
 SRFI 35: Conditions
 SRFI 38: External Representation for Data With Shared Structure
 SRFI 39: Parameter objects
 SRFI 40: A Library of Streams
 SRFI 41: Streams
 SRFI 42: Eager Comprehensions
 SRFI 43: Vector Library
 SRFI 45: Primitives for Expressing Iterative Lazy Algorithms
 SRFI 48: Intermediate Format Strings
 SRFI 54: Formatting
 SRFI 57: Records
 SRFI 59: Vicinity
 SRFI 60: Integers as Bits
 SRFI 61: A more general cond clause
 SRFI 62: S-expression comments
 SRFI 63: Homogeneous and Heterogeneous Arrays
 SRFI 64: A Scheme API for test suites
 SRFI 66: Octet Vectors
 SRFI 67: Compare Procedures
 SRFI 69: Basic hash tables
 SRFI 71: Extended LET-syntax for multiple values
 SRFI 74: Octet-Addressed Binary Blocks
 SRFI 78: Lightweight testing
 SRFI 86: MU & NU simulating VALUES & CALL-WITH-VALUES...
 SRFI 87: => in case clauses
 SRFI 98: An interface to access environment variables
 Index
[...search manuals...]
  top← prev  up  next → 

SRFI 4: Homogeneous numeric vector datatypes

 (require srfi/4)
Original specification: SRFI 4

This SRFI’s reader and printer syntax is not supported. The bindings are also
available from scheme/foreign.

[...search manuals...]
  top← prev  up  next → 
 
