►  The Racket Graphical Interface Toolkit
 1  Windowing
 2  Windowing Classes
 3  Windowing Functions
 4  Editors
 5  Snip and Style Classes
 6  Editor Classes
 7  Editor Functions
 8  WXME Decoding
 9  Preferences
10  Dynamic Loading
11  Startup Actions
12  Platform Dependencies
    Index
▼ 6  Editor Classes
 6.1  editor<%>
 6.2  editor-admin%
 6.3  editor-canvas%
 6.4  editor-data%
 6.5  editor-data-class%
 6.6  editor-data-class-list<%>
 6.7  editor-snip-editor-admin<%>
 6.8  editor-snip%
 6.9  editor-stream-in%
6.10  editor-stream-in-base%
6.11  editor-stream-in-bytes-base%
6.12  editor-stream-out%
6.13  editor-stream-out-base%
6.14  editor-stream-out-bytes-base%
6.15  editor-wordbreak-map%
6.16  keymap%
6.17  pasteboard%
6.18  text%
On this page:
get-dataclass
get-next
set-dataclass
set-next
write
[...search manuals...]
  top← prev  up  next → 

editor-data% : class?
  superclass: object%

An editor-data% object contains extra data associated to a snip or region in an
editor. See also Editor Data.

(new editor-data%) → (is-a?/c editor-data%)
The element returned by get-next is initialized to #f.

(send an-editor-data get-dataclass)
 → (or/c (is-a?/c editor-data-class%) false/c)
Gets the class for this data.

(send an-editor-data get-next)
 → (or/c (is-a?/c editor-data%) false/c)
Gets the next editor data element in a list of editor data elements. A #f
terminates the list.

(send an-editor-data set-dataclass v) → void?
  v : (is-a?/c editor-data-class%)
Sets the class for this data.

(send an-editor-data set-next v) → void?
  v : (or/c (is-a?/c editor-data%) false/c)
Sets the next editor data element in a list of editor data elements. A #f
terminates the list.

(send an-editor-data write f) → boolean?
  f : (is-a?/c editor-stream-out%)
Specification: Writes the data to the specified stream, returning #t if data is
written successfully or #f otherwise.

Default implementation: Returns #f.

[...search manuals...]
  top← prev  up  next → 
 
