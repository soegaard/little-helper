▼  The Racket Graphical Interface Toolkit
 1  Windowing
 2  Windowing Classes
 3  Windowing Functions
 4  Editors
 5  Snip and Style Classes
 6  Editor Classes
 7  Editor Functions
 8  WXME Decoding
 9  Preferences
10  Dynamic Loading
11  Startup Actions
12  Platform Dependencies
    Index
[...search manuals...]
  top← prev  up  next → 

11 Startup Actions

The racket/gui/base module can be instantiated only once per operating-system
process, because it sets hooks in the Racket run-time system to coordinate
between Racket thread scheduling and GUI events. Attempting to instantiate it a
second time results in an exception.

Loading racket/gui/base sets two parameters:

  • executable-yield-handler — The executable yield handler is set to evaluate
    (yield initial-eventspace) before chaining to the previously installed
    handler. As a result, the Racket process will normally wait until all
    top-level windows are closed, all callbacks are invoked, and all timers are
    stopped in the initial eventspace before the process exits.

  • current-get-interaction-input-port — The interaction port handler is set to
    wrap the previously installed handler’s result to yield to GUI events when
    the input port blocks on reading. This extension of the default handler’s
    behavior is triggered only when the current thread is the handler thread of
    some eventspace, in which case current-eventspace is set to the eventspace
    before invoking yield. As a result, GUI events normally can be handled
    while read-eval-print-loop (such as run by the plain Racket executable) is
    blocked on input.

[...search manuals...]
  top← prev  up  next → 
 
