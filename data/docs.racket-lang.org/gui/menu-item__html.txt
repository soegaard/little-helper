►  The Racket Graphical Interface Toolkit
 1  Windowing
 2  Windowing Classes
 3  Windowing Functions
 4  Editors
 5  Snip and Style Classes
 6  Editor Classes
 7  Editor Functions
 8  WXME Decoding
 9  Preferences
10  Dynamic Loading
11  Startup Actions
12  Platform Dependencies
    Index
▼ 2  Windowing Classes
 2.1  area<%>
 2.2  area-container<%>
 2.3  area-container-window<%>
 2.4  button%
 2.5  canvas<%>
 2.6  canvas%
 2.7  check-box%
 2.8  checkable-menu-item%
 2.9  choice%
2.10  clipboard-client%
2.11  clipboard<%>
2.12  combo-field%
2.13  control<%>
2.14  column-control-event%
2.15  control-event%
2.16  cursor%
2.17  dialog%
2.18  event%
2.19  frame%
2.20  gauge%
2.21  group-box-panel%
2.22  grow-box-spacer-pane%
2.23  horizontal-pane%
2.24  horizontal-panel%
2.25  key-event%
2.26  labelled-menu-item<%>
2.27  list-box%
2.28  list-control<%>
2.29  menu%
2.30  menu-bar%
2.31  menu-item<%>
2.32  menu-item%
2.33  menu-item-container<%>
2.34  message%
2.35  mouse-event%
2.36  pane%
2.37  panel%
2.38  popup-menu%
2.39  printer-dc%
2.40  radio-box%
2.41  selectable-menu-item<%>
2.42  separator-menu-item%
2.43  scroll-event%
2.44  slider%
2.45  subarea<%>
2.46  subwindow<%>
2.47  tab-panel%
2.48  text-field%
2.49  timer%
2.50  top-level-window<%>
2.51  vertical-pane%
2.52  vertical-panel%
2.53  window<%>
Inherited methods:
from selectable-menu-item<%>
command
get-shortcut
get-shortcut-prefix
set-shortcut
set-shortcut-prefix
from labelled-menu-item<%>
enable
get-help-string
get-label
get-plain-label
is-enabled?
on-demand
set-help-string
set-label
from menu-item<%>
delete
get-parent
is-deleted?
restore
[...search manuals...]
  top← prev  up  next → 

menu-item% : class?
  superclass: object%

  extends:  selectable-menu-item<%>
A menu-item% is a plain string-labelled menu item. Its parent must be a menu%
or popup-menu%. When the user selects the menu item, its callback procedure is
called.

(new menu-item%    [label label]                        
                   [parent parent]                      
                 [ [callback callback]                  
                   [shortcut shortcut]                  
                   [help-string help-string]            
                   [demand-callback demand-callback]    
                   [shortcut-prefix shortcut-prefix]])  
 → (is-a?/c menu-item%)
  label : label-string?
  parent : (or/c (is-a?/c menu%) (is-a?/c popup-menu%))
   callback   :   ((is-a?/c menu-item%) (is-a?/c control-event%) . -> . any)
              =   (lambda (i e) (void))
  shortcut : (or/c char? symbol? false/c) = #f
  help-string : (or/c label-string? false/c) = #f
   demand-callback   :   ((is-a?/c menu-item%) . -> . any)
                     =   (lambda (i) (void))
   shortcut-prefix   :   (listof (one-of/c 'alt 'cmd 'meta 'ctl
                                           'shift 'option))
                     =   (get-default-shortcut-prefix)
Creates a new menu item in parent. The item is initially shown, appended to the
end of its parent. The callback procedure is called (with the event type 'menu)
when the user selects the menu item (either via a menu bar, popup-menu in
window<%>, or popup-menu in editor-admin%).

See set-label for information about mnemonic &s in label.

If shortcut is not #f, the item has a shortcut. See get-shortcut for more
information. The shortcut-prefix argument determines the set of modifier keys
for the shortcut; see get-shortcut-prefix.

If help is not #f, the item has a help string. See get-help-string for more
information.

The demand-callback procedure is called by the default on-demand method with
the object itself.

[...search manuals...]
  top← prev  up  next → 
 
