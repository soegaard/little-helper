►  The Racket Graphical Interface Toolkit
 1  Windowing
 2  Windowing Classes
 3  Windowing Functions
 4  Editors
 5  Snip and Style Classes
 6  Editor Classes
 7  Editor Functions
 8  WXME Decoding
 9  Preferences
10  Dynamic Loading
11  Startup Actions
12  Platform Dependencies
    Index
▼ 6  Editor Classes
 6.1  editor<%>
 6.2  editor-admin%
 6.3  editor-canvas%
 6.4  editor-data%
 6.5  editor-data-class%
 6.6  editor-data-class-list<%>
 6.7  editor-snip-editor-admin<%>
 6.8  editor-snip%
 6.9  editor-stream-in%
6.10  editor-stream-in-base%
6.11  editor-stream-in-bytes-base%
6.12  editor-stream-out%
6.13  editor-stream-out-base%
6.14  editor-stream-out-bytes-base%
6.15  editor-wordbreak-map%
6.16  keymap%
6.17  pasteboard%
6.18  text%
On this page:
get-classname
read
set-classname
[...search manuals...]
  top← prev  up  next → 

editor-data-class% : class?
  superclass: object%

An editor-data-class% object defines a type for editor-data% objects. See also
Editor Data.

(new editor-data-class%) → (is-a?/c editor-data-class%)
Creates a (useless) instance.

(send an-editor-data-class get-classname) → string?
Gets the name of the class. Names starting with wx are reserved for internal
use.

(send an-editor-data-class read f)
 → (or/c (is-a?/c editor-data%) false/c)
  f : (is-a?/c editor-stream-in%)
Reads a new data object from the given stream, returning #f if there is an
error.

(send an-editor-data-class set-classname v) → void?
  v : string?
Sets the name of the class. Names starting with wx are reserved for internal
use.

An editor data class name should usually have the form "(lib\n ...)" to enable
on-demand loading of the class; see Editor Data for details.

[...search manuals...]
  top← prev  up  next → 
 
