►  The Racket Graphical Interface Toolkit
 1  Windowing
 2  Windowing Classes
 3  Windowing Functions
 4  Editors
 5  Snip and Style Classes
 6  Editor Classes
 7  Editor Functions
 8  WXME Decoding
 9  Preferences
10  Dynamic Loading
11  Startup Actions
12  Platform Dependencies
    Index
▼ 2  Windowing Classes
 2.1  area<%>
 2.2  area-container<%>
 2.3  area-container-window<%>
 2.4  button%
 2.5  canvas<%>
 2.6  canvas%
 2.7  check-box%
 2.8  checkable-menu-item%
 2.9  choice%
2.10  clipboard-client%
2.11  clipboard<%>
2.12  combo-field%
2.13  control<%>
2.14  column-control-event%
2.15  control-event%
2.16  cursor%
2.17  dialog%
2.18  event%
2.19  frame%
2.20  gauge%
2.21  group-box-panel%
2.22  grow-box-spacer-pane%
2.23  horizontal-pane%
2.24  horizontal-panel%
2.25  key-event%
2.26  labelled-menu-item<%>
2.27  list-box%
2.28  list-control<%>
2.29  menu%
2.30  menu-bar%
2.31  menu-item<%>
2.32  menu-item%
2.33  menu-item-container<%>
2.34  message%
2.35  mouse-event%
2.36  pane%
2.37  panel%
2.38  popup-menu%
2.39  printer-dc%
2.40  radio-box%
2.41  selectable-menu-item<%>
2.42  separator-menu-item%
2.43  scroll-event%
2.44  slider%
2.45  subarea<%>
2.46  subwindow<%>
2.47  tab-panel%
2.48  text-field%
2.49  timer%
2.50  top-level-window<%>
2.51  vertical-pane%
2.52  vertical-panel%
2.53  window<%>
On this page:
set-orientation
get-orientation
Inherited methods:
from subwindow<%>
reparent
from window<%>
accept-drop-files
client->screen
enable
focus
get-client-handle
get-client-size
get-cursor
get-handle
get-height
get-label
get-plain-label
get-size
get-width
get-x
get-y
has-focus?
is-enabled?
is-shown?
on-drop-file
on-focus
on-move
on-size
on-subwindow-char
on-subwindow-event
on-superwindow-enable
on-superwindow-show
popup-menu
refresh
screen->client
set-cursor
set-label
show
from area<%>
get-graphical-min-size
get-parent
get-top-level-window
min-height
min-width
stretchable-height
stretchable-width
from subarea<%>
horiz-margin
vert-margin
from area-container<%>
add-child
after-new-child
begin-container-sequence
border
change-children
container-flow-modified
container-size
delete-child
end-container-sequence
get-alignment
get-children
place-children
reflow-container
set-alignment
spacing
[...search manuals...]
  top← prev  up  next → 

vertical-panel% : class?
  superclass: panel%

A vertical panel arranges its subwindows in a single column. See also panel%.

(new vertical-panel%                            
     [parent parent]                            
   [ [style style]                              
     [enabled enabled]                          
     [vert-margin vert-margin]                  
     [horiz-margin horiz-margin]                
     [border border]                            
     [spacing spacing]                          
     [alignment alignment]                      
     [min-width min-width]                      
     [min-height min-height]                    
     [stretchable-width stretchable-width]      
     [stretchable-height stretchable-height]])  
 → (is-a?/c vertical-panel%)
   parent   :   (or/c (is-a?/c frame%) (is-a?/c dialog%)
                      (is-a?/c panel%) (is-a?/c pane%))
               (listof (one-of/c 'border 'deleted
   style   :                     'hscroll 'auto-hscroll     =   null
                                 'vscroll 'auto-vscroll))
  enabled : any/c = #t
  vert-margin : (integer-in 0 1000) = 0
  horiz-margin : (integer-in 0 1000) = 0
  border : (integer-in 0 1000) = 0
  spacing : (integer-in 0 1000) = 0
   alignment   :   (list/c (one-of/c 'left 'center 'right)
                           (one-of/c 'top 'center 'bottom))
               =   '(center top)
  min-width : (integer-in 0 10000) = graphical-minimum-width
  min-height : (integer-in 0 10000) = graphical-minimum-height
  stretchable-width : any/c = #t
  stretchable-height : any/c = #t
The style flags are the same as for panel%.

For information about the enabled argument, see window<%>. For information
about the horiz-margin and vert-margin arguments, see subarea<%>. For
information about the border, spacing, and alignment arguments, see
area-container<%>. For information about the min-width, min-height,
stretchable-width, and stretchable-height arguments, see area<%>.

(send a-vertical-panel set-orientation horizontal?) → void?
  horizontal? : boolean?
Sets the orientation of the panel, switching it between the behavior of the
vertical-panel% and that of the horizontal-panel%.

(send a-vertical-panel get-orientation) → boolean?
Initially returns #f, but if set-orientation is called, this method returns
whatever the last value passed to it was.

[...search manuals...]
  top← prev  up  next → 
 
