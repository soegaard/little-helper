►  The Racket Graphical Interface Toolkit
 1  Windowing
 2  Windowing Classes
 3  Windowing Functions
 4  Editors
 5  Snip and Style Classes
 6  Editor Classes
 7  Editor Functions
 8  WXME Decoding
 9  Preferences
10  Dynamic Loading
11  Startup Actions
12  Platform Dependencies
    Index
▼ 2  Windowing Classes
 2.1  area<%>
 2.2  area-container<%>
 2.3  area-container-window<%>
 2.4  button%
 2.5  canvas<%>
 2.6  canvas%
 2.7  check-box%
 2.8  checkable-menu-item%
 2.9  choice%
2.10  clipboard-client%
2.11  clipboard<%>
2.12  combo-field%
2.13  control<%>
2.14  column-control-event%
2.15  control-event%
2.16  cursor%
2.17  dialog%
2.18  event%
2.19  frame%
2.20  gauge%
2.21  group-box-panel%
2.22  grow-box-spacer-pane%
2.23  horizontal-pane%
2.24  horizontal-panel%
2.25  key-event%
2.26  labelled-menu-item<%>
2.27  list-box%
2.28  list-control<%>
2.29  menu%
2.30  menu-bar%
2.31  menu-item<%>
2.32  menu-item%
2.33  menu-item-container<%>
2.34  message%
2.35  mouse-event%
2.36  pane%
2.37  panel%
2.38  popup-menu%
2.39  printer-dc%
2.40  radio-box%
2.41  selectable-menu-item<%>
2.42  separator-menu-item%
2.43  scroll-event%
2.44  slider%
2.45  subarea<%>
2.46  subwindow<%>
2.47  tab-panel%
2.48  text-field%
2.49  timer%
2.50  top-level-window<%>
2.51  vertical-pane%
2.52  vertical-panel%
2.53  window<%>
On this page:
ok?
[...search manuals...]
  top← prev  up  next → 

cursor% : class?
  superclass: object%

A cursor is a small icon that indicates the location of the mouse pointer. The
bitmap image typically indicates the current mode or meaning of a mouse click
at its current location.

A cursor is assigned to each window (or the window may use its parent’s cursor;
see set-cursor for more information), and the pointer image is changed to match
the window’s cursor when the pointer is moved over the window. Each cursor
object may be assigned to many windows.

(make-object cursor%    image               
                        mask                
                      [ hot-spot-x          
                        hot-spot-y])   →   (is-a?/c cursor%)
  image : (is-a?/c bitmap%)
  mask : (is-a?/c bitmap%)
  hot-spot-x : (integer-in 0 15) = 0
  hot-spot-y : (integer-in 0 15) = 0
(make-object cursor% id) → (is-a?/c cursor%)
   id   :   (one-of/c 'arrow 'bullseye 'cross 'hand 'ibeam 'watch 'blank
                      'size-n/s 'size-e/w 'size-ne/sw 'size-nw/se)
The first case creates a cursor using an image bitmap and a mask bitmap. Both
bitmaps must have depth 1 and size 16 by 16 pixels. The hot-spot-x and
hot-spot-y arguments determine the focus point of the cursor within the cursor
image, relative to its top-left corner.

The second case creates a cursor using a stock cursor, specified as one of the
following:

  • 'arrow — the default cursor

  • 'bullseye — concentric circles

  • 'cross — a crosshair

  • 'hand — an open hand

  • 'ibeam — a vertical line, indicating that clicks control a text-selection
    caret

  • 'watch — a watch or hourglass, indicating that the user must wait for a
    computation to complete

  • 'arrow+watch — the default cursor with a watch or hourglass, indicating
    that some computation is in progress, but the cursor can still be used

  • 'blank — invisible

  • 'size-e/w — arrows left and right

  • 'size-n/s — arrows up and down

  • 'size-ne/sw — arrows up-right and down-left

  • 'size-nw/se — arrows up-left and down-right

If the cursor is created successfully, ok? returns #t, otherwise the cursor
object cannot be assigned to a window.

(send a-cursor ok?) → boolean?
Returns #t if the cursor is can be assigned to a window, #f otherwise.

[...search manuals...]
  top← prev  up  next → 
 
