▼  The Racket Guide
 1  Welcome to Racket
 2  Racket Essentials
 3  Built-In Datatypes
 4  Expressions and Definitions
 5  Programmer-Defined Datatypes
 6  Modules
 7  Contracts
 8  Input and Output
 9  Regular Expressions
10  Exceptions and Control
11  Iterations and Comprehensions
12  Pattern Matching
13  Classes and Objects
14  Units (Components)
15  Reflection and Dynamic Evaluation
16  Macros
17  Creating Languages
18  Performance
19  Running and Creating Executables
20  Compilation and Configuration
21  More Libraries
22  Dialects of Racket and Scheme
    Bibliography
    Index
[...search manuals...]
  top← prev  up  next → 

Bibliography

               David Goldberg, Robert Bruce Findler, and Matthew Flatt, “Super
[Goldberg04]   and Inner—Together at Last!,” Object-Oriented Programming,
               Languages, Systems, and Applications, 2004. http://
               www.cs.utah.edu/plt/publications/oopsla04-gff.pdf
               Matthew Flatt, “Composable and Compilable Macros: You Want it
[Flatt02]      When?,” International Conference on Functional Programming,
               2002.
               Matthew Flatt, Robert Bruce Findler, and Matthias Felleisen,
[Flatt06]      “Scheme with Classes, Mixins, and Traits (invited tutorial),”
               Asian Symposium on Programming Languages and Systems, 2006.
[Mitchell02]   Richard Mitchell and Jim McKim, Design by Contract, by Example.
               2002.
               Dorai Sitaram, “pregexp: Portable Regular Expressions for Scheme
[Sitaram05]    and Common Lisp.” 2002. http://www.ccs.neu.edu/home/dorai/
               pregexp/pregexp.html

[...search manuals...]
  top← prev  up  next → 
 
