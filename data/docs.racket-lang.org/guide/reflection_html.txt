►  The Racket Guide
 1  Welcome to Racket
 2  Racket Essentials
 3  Built-In Datatypes
 4  Expressions and Definitions
 5  Programmer-Defined Datatypes
 6  Modules
 7  Contracts
 8  Input and Output
 9  Regular Expressions
10  Exceptions and Control
11  Iterations and Comprehensions
12  Pattern Matching
13  Classes and Objects
14  Units (Components)
15  Reflection and Dynamic Evaluation
16  Macros
17  Creating Languages
18  Performance
19  Running and Creating Executables
20  Compilation and Configuration
21  More Libraries
22  Dialects of Racket and Scheme
    Bibliography
    Index
▼ 15  Reflection and Dynamic Evaluation
15.1  eval
15.2  Manipulating Namespaces
15.3  Scripting Evaluation and Using load
[...search manuals...]
  top← prev  up  next → 

15 Reflection and Dynamic Evaluation

Racket is a dynamic language. It offers numerous facilities for loading,
compiling, and even constructing new code at run time.

    15.1 eval

      15.1.1 Local Scopes

      15.1.2 Namespaces

      15.1.3 Namespaces and Modules

    15.2 Manipulating Namespaces

      15.2.1 Creating and Installing Namespaces

      15.2.2 Sharing Data and Code Across Namespaces

    15.3 Scripting Evaluation and Using load

[...search manuals...]
  top← prev  up  next → 
 
