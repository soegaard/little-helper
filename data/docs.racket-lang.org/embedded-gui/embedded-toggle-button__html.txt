►  Embedded GUI: Widgets Within Editors
1  Containers
2  Controls
3  Control Snips
4  Helpers
5  Snip Functions
▼ 2  Controls
2.1  embedded-text-button%
2.2  embedded-button%
2.3  embedded-toggle-button%
2.4  embedded-message%
2.5  vline%
2.6  hline%
Inherited methods:
from alignment<%>
align
get-min-height
get-min-width
get-parent
set-min-sizes
show
show/ hide
stretchable-height
stretchable-width
from dllist<%>
for-each
map-to-list
next
prev
[...search manuals...]
  top← prev  up  next → 

embedded-toggle-button% : class?
  superclass: snip-wrapper%

  extends:  alignment<%>
A check-box%-like control that a user can toggle between checked and unchecked
states.

(new embedded-toggle-button%    [images-off images-off]  
                                [images-on images-on]    
                                [turn-on turn-on]        
                                [turn-off turn-off]      
                              [ [state state]])          
 → (is-a?/c embedded-toggle-button%)
  images-off : (cons/c path-string? path-string?)
  images-on : (cons/c path-string? path-string?)
  turn-on : ((is-a?/c toggle-button-snip%) (is-a?/c event%) . -> . void?)
  turn-off : ((is-a?/c toggle-button-snip%) (is-a?/c event%) . -> . void?)
  state : (symbols 'on 'off) = 'on
The images-off argument is a pair filenames to be load as the button-label
image, where the first is the image for when the button is at rest, and the
second is the image for the button while its pressed—in both cases when the
button is not checked by the user. The images-on argument similarly determines
the images for then the button is checked.

The turn-on and turn-off callbacks are invoked when the button changes to
checked or unchecked, respectively.

The state argument determines whether the button is initially checked.

[...search manuals...]
  top← prev  up  next → 
 
