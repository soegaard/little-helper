▼  Extending Dr Racket
 1  Implementing Dr Racket Plugins
 2  Adding Languages to Dr Racket
 3  Creating New Kinds of Dr Racket Frames
 4  Extending the Existing Dr Racket Classes
 5  Expanding the User’s Program Text and Breaking
 6  Editor Modes
 7  Language-specific capabilities
 8  Check Syntax
 9  drracket: get/ extend
10  drracket: unit
11  drracket: language
12  drracket: language-configuration
13  drracket: debug
14  drracket: rep
15  drracket: frame
16  drracket: help-desk
17  drracket: eval
18  drracket: modes
19  drracket: module-language-tools
20  drracket: module-language
21  Documentation Utilities
22  Backwards compatibility
    Index
On this page:
drracket: help-desk: help-desk
[...search manuals...]
  top← prev  up  next → 

16 drracket:help-desk

(drracket:help-desk:help-desk  [ search-key              
                                 search-context])   →   any
  search-key : (or/c #f string?) = #f
   search-context   :   (or/c #f string? (list/c string? string?))
                    =   #f
if search-key is a string, calls perform-search with search-key and
search-context.

Otherwise, calls send-main-page with no arguments.

[...search manuals...]
  top← prev  up  next → 
 
