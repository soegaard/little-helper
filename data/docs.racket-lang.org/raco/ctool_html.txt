►  raco: Racket Command-Line Tools
 1  raco make: Compiling Source to Bytecode
 2  raco exe: Creating Stand-Alone Executables
 3  raco distribute: Sharing Stand-Alone Executables
 4  raco pack: Packaging Library Collections
 5  raco planet: Automatic Package Distribution
 6  raco setup: Installation Management
 7  raco decompile: Decompiling Bytecode
 8  raco demod: Demodularizing Programs
 9  raco ctool: Working with C Code
10  Adding a raco Command
▼ 9  raco ctool: Working with C Code
9.1  Compiling and Linking C Extensions
9.2  Embedding Modules via C
9.3  Compiling to Native Code via C
9.4  API for Raw Compilation
[...search manuals...]
  top← prev  up  next → 

9 raco ctool: Working with C Code

The raco ctool command works in various modes (as determined by command-line
flags) to support various tasks involving C code.

    9.1 Compiling and Linking C Extensions

      9.1.1 API for 3m Transformation

    9.2 Embedding Modules via C

    9.3 Compiling to Native Code via C

    9.4 API for Raw Compilation

      9.4.1 Bytecode Compilation

      9.4.2 Compilation via C

      9.4.3 Loading compiler support

      9.4.4 Options for the Compiler

      9.4.5 The Compiler as a Unit

        9.4.5.1 Signatures

        9.4.5.2 Main Compiler Unit

        9.4.5.3 Options Unit

        9.4.5.4 Compiler Inner Unit

[...search manuals...]
  top← prev  up  next → 
 
