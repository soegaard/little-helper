▼  Sprachebenen und Material zu Die Macht der Abstraktion
 1  Die Macht der Abstraktion - Anfa:nger
 2  Die Macht der Abstraktion
 3  Die Macht der Abstraktion mit Zuweisungen
 4  Die Macht der Abstraktion fortgeschritten
 5  Konstruktionsanleitungen 1 bis 10
 6  Bilder konstruieren: "image.ss"
 7  Animationen: "world.ss"
 8  Turtle-Grafik: "turtle.ss"
 9  Abspielen von Audio-Dateien: "sound.ss"
10  3D-Liniengraphik: "line3d.ss"
11  DMd A: Sprachen als Libraries
    Index
► 8  Turtle-Grafik: "turtle.ss"
8.1  Tutorial
8.2  Prozeduren
On this page:
8.1 Tutorial
8.1.1 Verbesserungen
8.2 Prozeduren
turtle
set-color
turn
draw
move
run
sequence
[...search manuals...]
  top← prev  up  next → 

8 Turtle-Grafik: "turtle.ss"

Note: This is documentation for the "turtle.rkt" teachpack that goes with the
German textbook Die Macht der Abstraktion.

Turtle-Grafik ist eine Methode zum Erstellen von Computergrafiken. Das Zeichnen
wird dabei durch das Bewegen einer virtuellen Schildkro:te u:ber den
Zeichenbereich modelliert. Eine Schildkro:te kann durch drei Befehle bewegt
werden:

  • (move n) Bewegt die Schildkro:te um n Pixel ohne zu zeichnen.

  • (draw n) Bewegt die Schildkro:te um n Pixel und zeichnet dabei.

  • (turn n) Dreht die Schildkro:te um n Grad im Uhrzeigersinn.

Wir stellen jetzt ein Teachpack fu:r DrRacket vor, mit dessen Hilfe solche
Turtle-Grafiken erstellt werden ko:nnen.

8.1 Tutorial

Unser Ziel ist es, in diesem Tutorial ein Quadrat mithilfe der Prozeduren des
Teachpacks zu zeichnen. Aus diesem Grund mu:ssen wir zuna:chst mit der Prozedur
draw eine Linie nach rechts malen. Die initiale Ausgansposition der Turtle ist
in der Bildmitte mit Blick nach rechts. Mit (draw 20) bewegen wir die Turtle
dann 20 Pixel nach rechts und zeichnen dabei. Um das resultierende Bild zu
sehen ist, mu:ssen wir die Turtle mittels der Prozedur run laufen lassen. Die
restlichen Parameter fu:r run sind die Ho:he und die Breite des Bildes sowie
die Farbe, in der gezeichnet werden soll. Geben Sie also folgenden Befehl in
die REPL ein, um Ihre erste Turtle-Grafik zu erstellen:

    (run (draw 20) 100 100 "red")

Sie erhalten dann eine Ausgabe wie die folgende:

[p1]

Nun vervollsta:ndigen wir die Linie zu einem rechten Winkel: wir drehen die
Turtle um 90DEG nach rechts und zeichnen dann eine Line der La:nge 20 Pixel
nach unten. Zum Drehen einer Turtle verwenden wir die Prozedur turn.

Da wir ein Quadrat aus zwei rechten Winkeln zusammensetzen ko:nnen,
abstrahieren wir u:ber das Zeichnen des rechten Winkels. Dazu schreiben wir
eine Prozedur right-angle die als Parameter eine Turtle erha:lt:

    (: right-angle (turtle -> turtle))
    (define right-angle
      (lambda (t1)
        (let* ((t2 ((draw 20) t1))
               (t3 ((turn -90) t2))
               (t4 ((draw 20) t3)))
          t4)))

Das Ergebnis sieht dann so aus:

[p2]

Um das Quadrat komplett zu zeichnen, sollen nun zwei rechte Winkel verwendet
werden. Wir zeichnen also einen rechten Winkel, drehen uns um 90DEG nach
rechts, und zeichnen einen zweiten rechten Winkel.

    (: square (turtle -> turtle))
    (define square
      (lambda (t1)
        (let* ((t2 (right-angle t1))
               (t3 ((turn -90) t2))
               (t4 (right-angle t3)))
          t4)))

So sieht das Ergebnis aus:

[p3]

8.1.1 Verbesserungen

An dem Beispiel ist leicht zu sehen, dass es zum Zeichnen mit Hilfe von
Turtle-Grafik oft erforderlich ist, Zwischenwerte wie t1, t2 etc., an die
na:chste Prozedur weiterzureichen, die Werte ansonsten aber nicht
weiterverwendet werden. Beispielsweise werden in der obigen Definition von
square die Variablen t1, ..., t4 nur gebraucht, um die Prozeduren right-angle,
(turn -90) und right-angle hintereinander auszufu:hren.

Um solche Fa:lle einfach programmieren zu ko:nnen, entha:lt das
Turtle-Teachpack die Prozedur sequence. Damit ko:nnen wir eine zu right-angle
a:quivalente Version wesentlicher einfacher aufschreiben:

    (define right-angle2
      (sequence (draw 20) (turn -90) (draw 20)))

Ebenso wie right-angle ko:nnen wir square leichter schreiben als:

    (define square2
      (sequence right-angle (turn -90) right-angle))

8.2 Prozeduren

turtle : signature
Dies ist die Signatur fu:r Turtles.

set-color : (color -> (turtle -> turtle))
Diese Prozedur ist eine Prozedurfabrik. Sie liefert als Ergebnis eine Prozedur,
die auf eine Turtle anwendbar ist. Wendet man das Ergebnis auf eine Turtle an,
so a:ndert dies die Farbe mit der gezeichnet wird.

Folgender Code

    (define square3
      (sequence right-angle (turn -90) (set-color "blue") right-angle))

liefert dieses Bild:

[p4]

turn : (number -> (turtle -> turtle))
Diese Prozedur ist eine Prozedurfabrik. Sie liefert als Ergebnis eine Prozedur,
die auf eine Turtle anwendbar ist. Wendet man das Ergebnis auf eine Turtle an,
so a:ndert sich die Blickrichtung der Turtle um die gegebene Gradzahl gegen den
Uhrzeigersinn.

draw : (number -> (turtle -> turtle))
Diese Prozedur ist eine Prozedurfabrik. Sie liefert als Ergebnis eine Prozedur,
die auf eine Turtle anwendbar ist. Wendet man das Ergebnis auf eine Turtle an,
so bewegt sich die Schildkro:te um die gegebene Anzahl von Pixel und zeichnet
dabei eine Linie.

move : (number -> (turtle -> turtle))
Diese Prozedur ist eine Prozedurfabrik. Sie liefert als Ergebnis eine Prozedur,
die auf ein Turtle anwendbar ist. Wendet man das Ergebnis auf eine Turtle an,
so bewegt sich die Schildkro:te um die gegebene Anzahl von Pixel, zeichnet
dabei aber keine Linie.

run : ((turtle -> turtle) number number color -> image)
Diese Prozedur wendet die u:bergebene Prozedur von Turtle nach Turtle auf die
initiale Schildkro:te an und zeigt das daraus resultierende Bild an. Der zweite
Parameter ist die Ho:he des Bilds, der dritte Parameter die Breite des Bilds
und der vierte Parameter die Farbe, mit der gezeichnet wird.

sequence : ((turtle -> turtle) ... -> (turtle -> turtle))
Diese Prozedur nimmt eine beliebige Anzahl von Turtle-Vera:nderungen (d.h.
Prozeduren mit Signatur turtle -> turtle) und erstellt eine neue Prozedur, die
die Vera:nderungen der Reihe nach von links nach rechts abarbeitet.

[...search manuals...]
  top← prev  up  next → 
 
