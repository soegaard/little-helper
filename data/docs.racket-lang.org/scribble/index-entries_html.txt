►  Scribble: The Racket Documentation Tool
1  Getting Started
2  @ Syntax
3  High-Level Scribble API
4  Scribbling Documentation
5  Literate Programming
6  Text Generation
7  Low-Level Scribble API
8  Running scribble
   Index
► 4  Scribbling Documentation
4.1  Getting Started with Documentation
4.2  Style Guide
4.3  Manual Forms
4.4  Racket
4.5  Evaluation and Examples
4.6  In-Source Documentation
4.7  BNF Grammars
4.8  Compatibility Libraries
▼ 4.3  Manual Forms
 4.3.1  Typesetting Code
 4.3.2  Documenting Modules
 4.3.3  Documenting Forms, Functions, Structure Types, and Values
 4.3.4  Documenting Classes and Interfaces
 4.3.5  Documenting Signatures
 4.3.6  Various String Forms
 4.3.7  Links
 4.3.8  Indexing
 4.3.9  Images
4.3.10  Bibliography
4.3.11  Miscellaneous
4.3.12  Index-Entry Descriptions
On this page:
module-path-index-desc
exported-index-desc
form-index-desc
procedure-index-desc
thing-index-desc
struct-index-desc
class-index-desc
interface-index-desc
mixin-index-desc
method-index-desc
[...search manuals...]
  top← prev  up  next → 

4.3.12 Index-Entry Descriptions

 (require scribble/manual-struct)
The scribble/manual-struct library provides types used to describe index
entries created by scribble/manual functions. These structure types are
provided separate from scribble/manual so that scribble/manual need not be
loaded when deserializing cross-reference information that was generated by a
previously rendered document.

(struct   module-path-index-desc ()
          #:extra-constructor-name make-module-path-index-desc)
Indicates that the index entry corresponds to a module definition via defmodule
and company.

(struct   exported-index-desc (name from-libs)
          #:extra-constructor-name make-exported-index-desc)
  name : symbol?
  from-libs : (listof module-path?)
Indicates that the index entry corresponds to the definition of an exported
binding. The name field and from-libs list correspond to the documented name of
the binding and the primary modules that export the documented name (but this
list is not exhaustive, because new modules can re-export the binding).

(struct   form-index-desc exported-index-desc ()
          #:extra-constructor-name make-form-index-desc)
Indicates that the index entry corresponds to the definition of a syntactic
form via defform and company.

(struct   procedure-index-desc exported-index-desc ()
          #:extra-constructor-name make-procedure-index-desc)
Indicates that the index entry corresponds to the definition of a procedure
binding via defproc and company.

(struct   thing-index-desc exported-index-desc ()
          #:extra-constructor-name make-thing-index-desc)
Indicates that the index entry corresponds to the definition of a binding via
defthing and company.

(struct   struct-index-desc exported-index-desc ()
          #:extra-constructor-name make-struct-index-desc)
Indicates that the index entry corresponds to the definition of a structure
type via defstruct and company.

(struct   class-index-desc exported-index-desc ()
          #:extra-constructor-name make-class-index-desc)
Indicates that the index entry corresponds to the definition of a class via
defclass and company.

(struct   interface-index-desc exported-index-desc ()
          #:extra-constructor-name make-interface-index-desc)
Indicates that the index entry corresponds to the definition of an interface
via definterface and company.

(struct   mixin-index-desc exported-index-desc ()
          #:extra-constructor-name make-mixin-index-desc)
Indicates that the index entry corresponds to the definition of a mixin via
defmixin and company.

(struct   method-index-desc exported-index-desc  ( method-name
                                                   class-tag)
          #:extra-constructor-name make-method-index-desc)
  method-name : symbol?
  class-tag : tag?
Indicates that the index entry corresponds to the definition of an method via
defmethod and company. The name field from exported-index-desc names the class
or interface that contains the method. The method-name field names the method.
The class-tag field provides a pointer to the start of the documentation for
the method’s class or interface.

[...search manuals...]
  top← prev  up  next → 
 
